// CoC generation?
// ---- Created with 3Dmigoto v1.2.31 on Sat Mar 12 04:45:50 2016

cbuffer cViewDepthFactor : register(b0)
{
  float4 cViewDepthFactor : packoffset(c0);
}

SamplerState sDepthS_s : register(s0);
SamplerState sNormalS_s : register(s1);
Texture2D<float4> sDepthT : register(t0);
Texture2D<float4> sNormalt : register(t1);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = sDepthT.Sample(sDepthS_s, v2.xy).x; // Affects furtherest blur
  r1.x = sDepthT.Sample(sDepthS_s, v2.zw).x; // Affects all blur
  r0.y = r1.x;
  r1.x = r1.x + r0.x;
  r1.y = sDepthT.Sample(sDepthS_s, v3.xy).x;
  r0.z = r1.y;
  r1.x = r1.x + r1.y;
  r1.y = sDepthT.Sample(sDepthS_s, v3.zw).x;
  r0.w = r1.y;
  r1.x = r1.x + r1.y; // With this disabled, background blur is removed entirely
  r1.x = cmp(r1.x >= 4); // When this is disabled, background blur has a lower focusing range
  r1.x = r1.x ? 1.000000 : 0; // When this is disabled, the sky uses foreground blur
  r2.xyzw = cmp(r0.xyzw >= float4(1,1,1,1));
  r2.xyzw = r2.xyzw ? float4(-1,-1,-1,-1) : float4(-0,-0,-0,-0);
  r0.xyzw = r2.xyzw + r0.xyzw;
  r0.xy = max(r0.xy, r0.zw);
  r0.x = max(r0.x, r0.y);
  r0.x = max(r0.x, r1.x);
  r0.x = r0.x * cViewDepthFactor.y + cViewDepthFactor.x;
  o0.x = 1 / r0.x;
  r0.xyz = sNormalt.Sample(sNormalS_s, v1.xy).xyz;
  r0.xyz = float3(-0.5,-0.5,-0.5) + r0.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = rsqrt(r0.x);
  r0.x = r0.z * r0.x;
  o0.y = -cViewDepthFactor.z * r0.x;
  o0.zw = float2(0,0);

  // Setting x to 0 makes things blur completely. 
  // Setting x to 1 makes them blur from afar.
  // Changing only 1 to 0/1 doesn't seem to do anything.
  //o0.y = 1;

  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v1.2.31 on Sat Mar 12 04:45:50 2016
//
//
// Buffer Definitions: 
//
// cbuffer cViewDepthFactor
// {
//
//   float4 cViewDepthFactor;           // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sDepth.S                          sampler      NA          NA    0        1
// sNormal.S                         sampler      NA          NA    1        1
// sDepthT                          texture  float4          2d    0        1
// sNormalt                         texture  float4          2d    1        1
// cViewDepthFactor                  cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.zwzz, t0.xyzw, s0
mov r0.y, r1.x
add r1.x, r0.x, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.y, v3.xyxx, t0.yxzw, s0
mov r0.z, r1.y
add r1.x, r1.y, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.y, v3.zwzz, t0.yxzw, s0
mov r0.w, r1.y
add r1.x, r1.y, r1.x
ge r1.x, r1.x, l(4.000000)
and r1.x, r1.x, l(0x3f800000)
ge r2.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
movc r2.xyzw, r2.xyzw, l(-1.000000,-1.000000,-1.000000,-1.000000), l(-0.000000,-0.000000,-0.000000,-0.000000)
add r0.xyzw, r0.xyzw, r2.xyzw
max r0.xy, r0.zwzz, r0.xyxx
max r0.x, r0.y, r0.x
max r0.x, r1.x, r0.x
mad r0.x, r0.x, cb0[0].y, cb0[0].x
div o0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t1.xyzw, s1
add r0.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r0.x, r0.xyzx, r0.xyzx
rsq r0.x, r0.x
mul r0.x, r0.x, r0.z
mul o0.y, r0.x, -cb0[0].z
mov o0.zw, l(0,0,0,0)
ret 
// Approximately 28 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
